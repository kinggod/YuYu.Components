(function (a, n) { a.fn.asyncupload = function (h, o) { var c = a.extend({}, a.fn.asyncupload.defaults, o), b = a(this), k = "YuYu_FileField_" + Math.random(), i = !1, p = parseInt(b.css("width")), d = parseInt(b.css("height")), q = b.css("margin-top"), r = b.css("margin-right"), s = b.css("margin-bottom"), t = b.css("margin-left"), u = b.css("padding-top"), v = b.css("padding-right"), w = b.css("padding-bottom"), x = b.css("padding-left"), y = b.css("border-top-style"), z = b.css("border-right-style"), A = b.css("border-bottom-style"), B = b.css("border-left-style"), C = b.css("border-top-width"), D = b.css("border-right-width"), E = b.css("border-bottom-width"), F = b.css("border-left-width"), G = b.css("border-top-color"), H = b.css("border-right-color"), I = b.css("border-bottom-color"), J = b.css("border-left-color"); b.hide(); try { i = "undefined" != new FormData } catch (K) { i = !1 } var m = i ? a('<input type="file" id="' + k + '" />').css({ position: "absolute", top: "-1px", right: "-1px", width: "1000px", height: "500px", margin: "0", padding: "0", opacity: "0", filter: "alpha(opacity=0)" }) : null, l = "" == b.val() ? a("<span>\u672a\u9009\u62e9\u6587\u4ef6</span>").css({ display: "block", marginRight: "60px", color: "#999", overflow: "hidden", whiteSpace: "nowrap", textOverflow: "ellipsis" }) : a("<span>\u5df2\u4e0a\u4f20\u6587\u4ef6</span>").css({ display: "block", marginRight: "60px", color: "#393", overflow: "hidden", whiteSpace: "nowrap", textOverflow: "ellipsis" }), e = a("<span></span>").css({ display: "block", "float": "right", width: "60px", color: "#090", textAlign: "right", overflow: "hidden", whiteSpace: "nowrap", textOverflow: "ellipsis" }), g = a("<div></div>").css({ width: "0", height: "0", borderBottom: d - parseInt(0.9 * d) + "px solid #00f", fontSize: "0", lineHeight: "0", overflow: "hidden" }); b.after(a("<div></div>").css({ width: p + "px", height: d + "px", marginTop: q, marginRight: r, marginBottom: s, marginLeft: t, paddingTop: u, paddingRight: v, paddingBottom: w, paddingLeft: x, borderTopStyle: y, borderRightStyle: z, borderBottomStyle: A, borderLeftStyle: B, borderTopWidth: C, borderRightWidth: D, borderBottomWidth: E, borderLeftWidth: F, borderTopColor: G, borderRightColor: H, borderBottomColor: I, borderLeftColor: J, borderSpacing: "1px", borderCollapse: "collapse", fontSize: "12px" }).append(a("<div></div>").css({ "float": "right", width: "70px", height: d + "px", overflow: "hidden", backgroundColor: "#ccc" }).append(a(i ? "<div></div>" : '<div id="' + k + '"></div>').css({ position: "relative", width: "70px", height: d + "px", lineHeight: d + "px", textAlign: "center", fontSize: "12px", backgroundColor: "#ccc", overflow: "hidden" }).append(i ? a("<span>\u9009\u62e9\u6587\u4ef6</span>") : null).append(m))).append(a("<div></div>").css({ marginRight: "72px" }).append(a("<div></div>").css({ height: parseInt(0.9 * d) + "px", lineHeight: parseInt(0.9 * d) + "px" }).append(e).append(l)).append(a("<div></div>").css({ width: "100%", margin: "0", padding: "0", backgroundColor: "#ccc" }).append(g)))); i ? m.change(function () { var a = document.getElementById(k).files[0]; if (a) { var f = 1048576 < a.size ? (Math.round(100 * a.size / 1048576) / 100).toString() + "MB" : (Math.round(100 * a.size / 1024) / 100).toString() + "KB"; l.text(a.name + "(" + f + ")"); if ("undefined" != c.fileExtAllowd && (f = a.name.lastIndexOf("."), f = a.name.substring(-1 < f ? f : 0), "*.*" != c.fileExtAllowd && 0 > c.fileExtAllowd.indexOf(f))) { e.text("\u683c\u5f0f\u9519\u8bef\uff01"); return } if (a.size > c.fileSizeLimit) e.text("\u6587\u4ef6\u592a\u5927\uff01"); else { var f = new FormData, j = new XMLHttpRequest; f.append("File", a); j.upload.addEventListener("progress", function (a) { e.text(a.lengthComputable ? Math.round(100 * a.loaded / a.total) + "%" : "\u6b63\u5728\u4e0a\u4f20\u2026"); var b = parseFloat(g.parent().css("width")); g.css("width", Math.round(a.loaded * b / a.total) + "px") }, !1); j.addEventListener("load", function (a) { b.val(a.target.responseText); e.text("\u4e0a\u4f20\u6210\u529f\uff01"); g.css("width", "100%"); c.callback && c.callback(a.target.responseText) }, !1); j.addEventListener("error", function () { e.text("\u4e0a\u4f20\u5931\u8d25\uff01") }, !1); j.addEventListener("abort", function () { e.text("\u4e0a\u4f20\u53d6\u6d88\uff01") }, !1); h && "" != h && (j.open("POST", h), j.send(f)) } } }) : (b.after(a('<script type="text/javascript" src="/swfupload/swfupload.js"><\/script>')), n.onload = function () { new SWFUpload({ flash_url: "../swfUpload/swfupload.swf", flash9_url: "../swfUpload/swfupload_fp9.swf", upload_url: h, file_size_limit: c.fileSizeLimit + "B", file_types: "undefined" == c.fileExtAllowd ? "*.*" : c.fileExtAllowd, file_upload_limit: 1, file_queue_limit: 1, debug: !1, button_window_mode: "transparent", button_width: "70", button_height: d, button_placeholder_id: k, button_text: '<span class="btn">\u9009\u62e9\u6587\u4ef6</span>', button_text_style: ".btn {display:block;text-align:center;font-size:12px;}", button_text_top_padding: (d - (a.browser.msie || a.browser.opera ? 20 : 14)) / 2, file_dialog_complete_handler: function () { h && "" != h && this.startUpload() }, upload_start_handler: function (a) { a && (1048576 < a.size ? Math.round(100 * a.size / 1048576) : Math.round(100 * a.size / 1024), l.text(a.name + "(" + a.size + ")")) }, upload_progress_handler: function (a, b) { var c = b / a.size; 1 <= c && (c = 1); e.text(Math.round(100 * c) + "%"); var d = parseFloat(g.parent().css("width")); g.css("width", Math.round(c * d) + "px") }, upload_error_handler: function () { e.text("\u4e0a\u4f20\u5931\u8d25\uff01") }, upload_success_handler: function (a, d) { b.val(d); c.callback && c.callback(d) }, upload_complete_handler: function () { e.text("\u4e0a\u4f20\u6210\u529f\uff01"); g.css("width", "100%") } }) }) }; a.fn.asyncupload.defaults = { fileSizeLimit: 4194304, fileExtAllowd: "*.jpg;*.jpeg;*.png;*.gif;*.bmp" } })(jQuery, Window);